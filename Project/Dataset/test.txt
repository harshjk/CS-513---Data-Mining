algorithm	0	Given an array of integers: 1. rearrange the array such that all non-zero members appear on the left of the array (order is not important) 2. return the number of non-zero members  e.g. [1,2,0,5,3,0,4,0] => [1,2,5,3,4,0,0,0] and return 5. The non-zero array members can be in any order.
algorithm	0	You are given a rotated sorted array of size N. You have to search a given number into it. Example: [4,6,8,14,90,-9,-2,0,3], Search -2.
algorithm	0	Write a program to check whether it is a valid binary tree or not.
algorithm	0	Given a very large binary number which cannot be stored in a variable, determine the remainder of the decimal equivalent of the binary number when divided by 3. Generalize to find the remainder for any number k.
algorithm	1	The following code has a bug, find it and fix it
algorithm	0	Given the weekly vacation numbers for various cities for an year (ie 12 * 4 =  48 weeks ) , design a tour which will maximize the number of vacations for a salesman.   The salesman can choose to work in any city  for the week , and can weekly change the city unlimited number of times , but has to remain in the city for the week . It's not necessary for the salesman to go to all cities , goal is to find the schedule which maximize the vacation for whole year.   Input will be HashMap<string , int[48] vacation> where string is the city name and   int[48] is city's vacation numbers for an year.
algorithm	0	Design the movement algorithm of a snake from snake game and give its complexity. You can base your idea of algorithm in whatever design for the game. eg. a matrix to represent the grid, use a linked list to represent the snake... Use any language you want.
algorithm	0	Write an efficient solution to give the next best available slot in a parking lot given that you need to minimize the effort to park and exit from the lot.
algorithm	0	In memory cache implementation which supports concurrent operations for PUT, GET and DELETE
algorithm	0	If we have telephone directory with 1,00,000 entries,which sorting algorithm is best?
algorithm	0	Running with Bunnies ====================  You and your rescued bunny prisoners need to get out of this collapsing death trap of a space station - and fast! Unfortunately, some of the bunnies have been weakened by their long imprisonment and can't run very fast. Their friends are trying to help them, but this escape would go a lot faster if you also pitched in. The defensive bulkhead doors have begun to close, and if you don't make it through in time, you'll be trapped! You need to grab as many bunnies as you can and get through the bulkheads before they close.   The time it takes to move from your starting point to all of the bunnies and to the bulkhead will be given to you in a square matrix of integers. Each row will tell you the time it takes to get to the start, first bunny, second bunny, ..., last bunny, and the bulkhead in that order. The order of the rows follows the same pattern (start, each bunny, bulkhead). The bunnies can jump into your arms, so picking them up is instantaneous, and arriving at the bulkhead at the same time as it seals still allows for a successful, if dramatic, escape. (Don't worry, any bunnies you don't pick up will be able to escape with you since they no longer have to carry the ones you did pick up.) You can revisit different spots if you wish, and moving to the bulkhead doesn't mean you have to immediately leave - you can move to and from the bulkhead to pick up additional bunnies if time permits.  In addition to spending time traveling between bunnies, some paths interact with the space station's security checkpoints and add time back to the clock. Adding time to the clock will delay the closing of the bulkhead doors, and if the time goes back up to 0 or a positive number after the doors have already closed, it triggers the bulkhead to reopen. Therefore, it might be possible to walk in a circle and keep gaining time: that is, each time a path is traversed, the same amount of time is used or added.  Write a function of the form answer(times, time_limit) to calculate the most bunnies you can pick up and which bunnies they are, while still escaping through the bulkhead before the doors close for good. If there are multiple sets of bunnies of the same size, return the set of bunnies with the lowest prisoner IDs (as indexes) in sorted order. The bunnies are represented as a sorted list by prisoner ID, with the first bunny being 0. There are at most 5 bunnies, and time_limit is a non-negative integer that is at most 999.  For instance, in the case of [   [0, 2, 2, 2, -1],  # 0 = Start   [9, 0, 2, 2, -1],  # 1 = Bunny 0   [9, 3, 0, 2, -1],  # 2 = Bunny 1   [9, 3, 2, 0, -1],  # 3 = Bunny 2   [9, 3, 2, 2,  0],  # 4 = Bulkhead ] and a time limit of 1, the five inner array rows designate the starting point, bunny 0, bunny 1, bunny 2, and the bulkhead door exit respectively. You could take the path:  Start End Delta Time Status     -   0     -    1 Bulkhead initially open     0   4    -1    2     4   2     2    0     2   4    -1    1     4   3     2   -1 Bulkhead closes     3   4    -1    0 Bulkhead reopens; you and the bunnies exit  With this solution, you would pick up bunnies 1 and 2. This is the best combination for this space station hallway, so the answer is [1, 2].    Test cases ==========  Inputs:     (int) times = [[0, 1, 1, 1, 1], [1, 0, 1, 1, 1], [1, 1, 0, 1, 1], [1, 1, 1, 0, 1], [1, 1, 1, 1, 0]]     (int) time_limit = 3 Output:     (int list) [0, 1]  Inputs:     (int) times = [[0, 2, 2, 2, -1], [9, 0, 2, 2, -1], [9, 3, 0, 2, -1], [9, 3, 2, 0, -1], [9, 3, 2, 2, 0]]     (int) time_limit = 1 Output:     (int list) [1, 2]
algorithm	0	1. Find if two strings are palindrome 2. Given a list of strings, check if concatenating any two string would form a palindrome. Brute force way to do this is O(n^3), he asked ways to optimize this.
algorithm	4	Return the length of longest possible chunked palindrome string.  Examples :   Input : VOLVO  Output : 3 Explanation : (VO)L(VO)   Input : merchant  Output : 1  Explanation : No chunks possible.  Input :  ghiabcdefhelloadamhelloabcdefghi  Output : 7  Explanation :  (ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)
algorithm	0	Given an array of integers. Find the surpasser count of each element of the array. "A surpasser of an element of an array is a greater element to its right" ex -  Input:  [2, 7, 5, 3, 0, 8, 1] Output: [4, 1, 1, 1, 2, 0, 0]
algorithm	2	Given a string with only parenthesis. Check if the string is balanced. ex -  1) "<({()})[]> is balanced 2) "<({([)})[]> is not balanced
algorithm	0	Given an un-directed weighted graph G(V,E), find the minimum weight between two given nodes X & Y (i.e. sum of weights of edges between X & Y). You can add an extra egde with weight W between any two nodes in the graph exactly one time (if required).
algorithm	0	There is this nice tiny *nix utility called *wc*. The idea here is :
algorithm	1	/* # There's a room with a TV and people are coming in and out to watch it. The TV is on only when there's at least a person in the room. # For each person that comes in, we record the start and end time. We want to know for how long the TV has been on. In other words: # Given a list of arrays of time intervals, write a function that calculates the total amount of time covered by the intervals. # For example:  # input = [(1,4), (2,3)] # > 3 # input = [(4,6), (1,2)] # > 3 # input = [(1,4), (6,8), (2,4), (7,9), (10, 15)] # > 11 */
algorithm	2	Given an Array A with n elements. Pick maximum number of elements from given array following the rule: 1. We cannot pick A[i] and A[j] if absolute value of (A[i] - A[j]) > absolute value of (i - j)  Example: {13,5,4} Ans: 2 Pick 5 and 4.
algorithm	1	A list of words is given and a bigger string given how can we find whether the string is a permutation of the smaller strings. eg- s= badactorgoodacting dict[]={'actor','bad','act','good'] FALSE eg- s= badactorgoodacting dict[]={'actor','bad','acting','good'] TRUE The smaller words themselves don't need to be permuted. The question is whether we can find a ordering of the smaller strings such that if concatenated in that order it gives the larger string One more constraint - some words from dict[] may also be left over unused
algorithm	2	Given a Pattern and a dictionary, print out all the strings that match the pattern. where a character in the pattern is mapped uniquely to a character in the dictionary ( this is what i was given first).  e.g 1. ("abc" , <"cdf", "too", "hgfdt" ,"paa">) -> output = "cdf"       2. ("acc" , <"cdf", "too", "hgfdt" ,"paa">) -> output = "too", "paa"
algorithm	1	Given a sparse matrix, implement below two methods: void set(int row, int col, int val) /*Update value at given row and col*/  int sum(int row, int col) /*give sum from top left corner to given row, col  sub-matrix*/
algorithm	2	Given an array of numbers, find the maximum and minimum sum of sub sequences at a distance > m  Example   arr = {3, 4, -2, 1, -2, 4, 6, -3, 5} & m = 2  Solution  max = 13 {4 + 4 + 5}, min = -5 {-2-3}
algorithm	0	I was asked in an interview: You are given a dump file of IPv4 addresses. You are to find 4 most common occurring subnets. Lets say an IP address if of type a.b.c.d you have to find most common occurring four subnets of the form,  a.*.*.*  a.b.*.*  a.b.c.*  a.b.c.d  Here * matches anything.  My first solution was build an in memory hashtable. Given an IP address a.b.c.d split it as ["a","b","c","d"] and add "a", "a.b", "a.b.c", "a.b.c.d" to the hash table and count it. [There are optimizations possible like considering the entire IP address as a 32 bit unsigned integer and count it with masks and shifts]  Then the question got extended: "assume you can never hold everything in memory, how would you solve it?" Now, the very first solution that I could say was to do an external sort and then count it.  The next solution I gave was to split the IP addresses into buckets. The algorithm was,
algorithm	0	Write a program to detect cycle in loop.
algorithm	0	Given a graph where every two nodes are either friends or enemies with each other. Find a way to go from one node to the other.  Restrictions: 1) You can also travel from one node to next if they are friends with each other 2) You have some magic potions. You can convert an enemy path to a friend path with a magic potion.  Find the path with min number of magic potions required.
algorithm	0	Hearten: Courage is as   repay: Installment demote: rank educate: knowledge agree: quarrel punish: wrongdoing
algorithm	0	Given an api which returns an array of chemical names and an array of chemical symbols, display the chemical names with their symbol surrounded by square brackets:  Ex: Chemicals array: ['Amazon', 'Microsoft', 'Google'] Symbols: ['I', 'Am', 'cro', 'Na', 'le', 'abc']  Output: [Am]azon,  Mi[cro]soft,  Goog[le]   If the chemical string matches more than one symbol, then choose the one with longest length. (ex. 'Microsoft' matches 'i' and 'cro')  My solution: (I sorted the symbols array in descending order of length and ran loop over chemicals array to find a symbol match(using indexOf in javascript) which worked. But I din't make it through the interview, I am guessing my solution was O(n2) and they expected an efficient algorithm.
algorithm	1	You are given a string "abc" which is encoded like "123" where alphabets are mapped like a => 1 to z => 26. Now find out how many string can be formed by reverse engineering encode string "123".  For ex. given string "123"  we can form 3 string "abc"(1,2,3), "lc" (i.e 12,3), "aw"(1,23).  for string "1234" we have following possible combinations, I might be missing some of them but you get the idea   {12, 3, 4} {1, 23, 4} {1, 2, 3, 4}
algorithm	0	Write a function that takes a number and returns the square root
algorithm	0	This class will be given a list of words (such as might be tokenized   from a paragraph of text), and will provide a method that takes two   words and returns the shortest distance (in words) between those two   words in the provided text.   Example:     WordDistanceFinder finder = new WordDistanceFinder(Arrays.asList("the", "quick", "brown", "fox", "quick"));     assert(finder.distance("fox","the") == 3);     assert(finder.distance("quick", "fox") == 1);    "quick" appears twice in the input. There are two possible distance values for "quick" and "fox":       (3 - 1) = 2 and (4 - 3) = 1.   Since we have to return the shortest distance between the two words we return 1.
algorithm	1	Given a string S, print the longest substring P such that P > S lexicographically. You may assume that such substring exists.
algorithm	0	Given a stream of numbers write a program that computes sum of pair of numbers. There should be two methods store and IsNumberPresent. The store should store the numbers and IsNumberPresent should check if the number is present in the computed sums.
algorithm	0	You have a stream of numbers coming in (lets say more than a million). The numbers are between [0-999).  Implement a class which can insert(int i); getMean(); getMedian();  in constant time O(1).
algorithm	0	Given a list of tuples {x, y, x' } that describe histograms on the X/Y axis, such that X is the X coordinate, Y is the Y coordinate, and X' is the distance from X, write a function that draws the skyline of these tuples. For example: {3, 2, 4} , {4,5,3} will give the following points: {3,0} - trivial {3,2} - trivial {4,5} -calculated {7,0} -if list is done.  You cannot assume that the tuples are sorted. Provide runtime analysis.
algorithm	2	Given a number (integer) as a string turn in into a number:  E.g. "One million two hundreds thousands fifty seven" => shoud return 1200057.  How to model it and how to test it? What data structures would you use. Deep testing (corner cases)
algorithm	0	Implement the power function with o(logN) time complexity and O(1) space
algorithm	0	Written Test question:  Q1) Given binary tree find largestPath size from one leaf to another leaf.  int getLargestPathSize(node *root);
algorithm	0	Given a tree.  Each node is of type:
algorithm	0	Implement class Stack with help of only 2 queues,  i.e.:
algorithm	2	for given array
algorithm	1	Given-an-array-of-length-n-having-integers-0-to-n-1-in-unsorted-order-we-have-to-modify-this-array-such-that-the-value-at-a-n-becomes-a-a-n-for-example-if-a-0-contains-5-then-a-0-will-have-value-a-5-and-so-on-condition-is-that-this-should-take-O-n-time-complexity
algorithm	3	Imagine a man reading a book. He can perform only 2 possible actions of reading:  1) read a page in a minute (careful reading),  2) read two pages in a minute (look through). Nothing else is permitted. Calculate the number of all possible combinations of book reading ways with given number of pages. Example: given 3 pages. Answer is 3 combinations, as follows:  1st: Careful reading (1) - careful reading (1) - careful reading (1), 2nd: Careful reading (1) - look through (2), 3rd: Look through (2) - careful reading (1).
algorithm	0	You have some money in your bank account, the only function to withdraw money is uint16 Withdraw(uint16 value), if the value is greater than the money you have it returns 0, otherwise it withdraws the requested amount and returns the "value" Write a function that withdraws all your money.
algorithm	2	Write a function to detect the number of cycles in a directed graph. The graph is passed as an adjacency matrix.
algorithm	2	You are given a permutation arr[N]. E.g. arr[3] = {2, 1, 0} or arr[5] = {0,1,2,4,3}; Then you can prepare somehow and then start serving requests: request(a, b, k) = sorted(arr[a:b])[k], that is, k-th order statistic on slice [a:b] of arr. E.g. if arr is [3,4,5,0,1,2] and a = 2 and b = 5, then arr[a:b] = [5,0,1] and let k = 2, so we sort it - get [0,1,5] and take k-th element, that is - 5.  Implement request(a, b, k) function. You can preprocess input data, that is, assume there will be only one array and many request() calls.
algorithm	0	Design a train system which suggests shortest path and transfer needed to reach from source to destination. What can be the optimization.  For example: A system may have 10 trains from t1 to t10.  There are total 100 stops in the system s1 to s100.  Each train has fixed set of stops. You could allow to change and transfer train of source and destination does not cover using just 1 train.   What all can be APIs, data structure, optimizations scalable option.
algorithm	5	I came across this problem online.  > Given an integer:N and an array int arr[], you have to add some > elements to the array so that you can generate from 1 to N by using > (add) the elements in the array.  Please keep in mind that you can only use each element in the array once when generating a certain x (1<=x<=N). Return the count of the least adding numbers.      For example:      N=6, arr = [1, 3]       1 is already in arr.       add 2 to the arr.       3 is already in arr       4 = 1 + 3       5 = 2 + 3       6 = 1 + 2 + 3       So we return 1 since we only need to add one element which is 2.  Can anyone give some hints?
algorithm	0	Given N tasks, find the maximal points that can be achieved by finishing them  Problem Constraints  There are T minutes for completing N tasks  Solutions can be submitted at any time, including exactly T minutes after the start  i-th task submitted t minutes after the start, will get maxPoints[i] - t * pointsPerMinute[i] points  i-th task takes requiredTime[i] minutes to solve  Input Format  Line 1: T, total minutes available to finish  Line 2: Comma separated list of maxPoints  Line 3: Comma separated list of pointsPerMinute  Line 4: Comma separated list of requiredTime  Sample Input  75  250,500,1000  2,4,8  25,25,25  Sample Output  1200  Explanation  First, solve the third task 25 minutes after the start of the contest. Get 1000 - 8 * 25 = 800 points  Second, solve the second task 50 minutes after the start of the contest. Get 500 - 4 * 50 = 300 points  Third, solve the first task 75 minutes after the start of the contest. Get 250 - 2 * 75 = 100 points  In total, get 800 + 300 + 100 = 1200 points   Any optimized solution for this ?
algorithm	0	You have an app that uses a 3rd party video player. The VP has the functionalities - play, pause, seek and close. On close, the VP makes a callback to your app. To the callback it sends the below parameters * videoLengthInSecs * VideoPart[]. VideoPart {startTime, endTime}. Denotes a continuous part of the video that was watched without any disturbance caused by pause, seek.  Your app should be able to determine whether the user has watched the entire video or not.  60, [{0, 30}, {30, 60}] return boolean
algorithm	0	In 5 minutes write a code which checks if a given number is a power of two.
algorithm	3	Given two sorted arrays find the element which would be N-th in their merged and sorted combination.
algorithm	2	Count triangles in an undirected graph where a triangle is a unique set of three vertices connected to one another.
algorithm	1	A car rental company which rents car by per hour basis  wants to know the time period for maximum number cars that are rented. ie you are given the list of rental start time and return times of all rented cars in the day  for all cars in a day find the maximum time period in which cars are on the road.
algorithm	2	There's a function that concatenates two strings and returns the length of the resultant string. When called upon a series of strings how do we minimize the cost of using this function. Let's say we have 3 strings, A= "abc", B="def", C = "gh". Now cost of merging AB = 6 and cost of merging the resultant string with C is 8. Thus the total cost is 6 + 8 = 14. However, if we merge A and C, then the cost is 5 and then merge B with this, the cost is 8, so the total cost is 13.  Find an algorithm that minimizes the cost of adding such a series of strings.
algorithm	0	Given an array {1,2,3,4,5}. Sort the array based on modulo of 3.  Expected output => {3,1,4,2,5} (Increasing order of modulo of 3) ({3,4,1,5,2} is also a right answer)  Interviewer expects a solution with O(N) time and O(1) memory(No additional datastructure other than the input array).
algorithm	0	You are given a String S that consists of characters '0' and '1' only.Return the smallest positive integer K such that it is possible to cut S into K pieces, each of them being a power of 5. If there is no such K, return -1 instead. Examples 0)   "101101101" Returns: 3 We can split the given string into three "101"s.  Note that "101" is 5 in binary.  1)   "1111101" Returns: 1 "1111101" is 5^3.  2)   "110011011" Returns: 3 Split it into "11001", "101" and "1".  3)   "1000101011" Returns: -1  4)   "111011100110101100101110111" Returns: 5
algorithm	2	Assume we have a very large file containing millions of lines of data. Only 2 lines are identical, rest are unique. Each line is long enough that they may not fit in memory. Design an efficient algorithm to determine identical lines? And, then generalize it for 'n' identical lines.
algorithm	5	Say you have a keypad that has keys for the numbers 0 through 9 and the correct code is some sequence of 5 digits. This keypad does *not* reset after entering an incorrect sequence of 5 digits. ie. If the correct sequence is 12345, entering 7512345 will succeed in opening it because it ends in the correct sequence. If the keypad actually resets after every 5 digits pressed, then it would not succeed b/c it would interpret the above sequence as "75123" then "45".  1. Write an algorithm that will try to find the correct code for this keypad. Assume you have an API similar to KeyPad.pressKey(int n) where you pass in a number (0...9) and it returns true if the keypad unlocks and false if it's still locked.  Note that you could easily enter all digits of all numbers 00000 through 99999 resulting in 5*100000 key presses, but remember that the panel does not reset after every sequence of 5 digits, so find a way to do this more efficiently. Notice for example that entering the stream 3791283780 will test the length 5 sequences 37912, 79128, 91283, 12837, 28378, 83780; not only the two disjoint sequences 37912 and 83780.  Think of this keypad as remembering the last 4 keys pressed (and the order pressed); when the next key is pressed, if the last 4 keys + the current key equal the correct code, the keypad will unlock. Assume the keypad does all this internally, so you can just keep feeding it keypresses and it will eventually unlock if the last 5 keypresses entered is the correct code.  2. Generalize your algorithm to work for a keypad where you don't know the length of the correct sequence in advance.
algorithm	0	You are given some equations which may contain > or = on different-different operand. For example there are valid input and invalid (a=5, b<a=50)   String e1 = "a>b=1";   String e2 = "a>b=2";   String e3 = "a>c>e=3";   String e4 = "a>c>f=4";   String e5 = "b>a=5";   String e6 = "a>b>c=5";   String e7 = "b=7";   String e8 = "a>b>c>d=99";   String e9 = "a>b=99";  You need to create JSON string from it.  {  a: {   b: [1,2,99],   c:  {     e:3,     f:4    }         },  b: {  a : 5         }   }  Highlighted one are invalid bec as they come they ask for overwrite the data (a>b>c = 5; C has e and f so we can overwrite.  Input: You are given those string in string array Output:  Construct JSON Print it If you print in same as above (nice manner) +point
algorithm	0	Design a book catalog search (apis were given for the search,full needs to be implemented as running application)
algorithm	0	Given any language , you use libraries , which might use more lib etc . Find the order of building the libraries
algorithm	1	Given an array of integers and a number. WAP to find the pairs which sum of upto given number.  I solved it. Then he asked about writing test cases for this function.  I wrote below test cases  1.) All the elements should be number. 2.) Length of array should not be 0. 3.) Array itself should not be null. 4.) Given number, arrayLength can be represented by 32bits or 64 bits. 5.) number should not be negative. 6.) Input does not has pair, It should return false 7.) Input has pair, It should return true 8.) Input has all negative values and pair exists, then function should return true 9.) Input has all negative values and pair does not exists, function should return false  He told that he is looking for more test cases. Can you guys think of some more complex test cases.
algorithm	0	Assume you have a starting 4 digit number, say 1234 and and ending 4 digit number 4567. For changing a bit of a number from 1 to 3 (for example), it will take 2 steps (from 1->2 and from 2->3). So to convert 1234 to 4567, youll have to change each and every bit individually in some number of steps. (Change 1->4 in 3 steps, 2->5 in 3 steps and so on). Now there is a list of blacklisted numbers. So while transforming start to end, if you reach a blacklisted number, then you cannot change that particular bit, youll have to move to another bit. E.g. Assume 1434 is a blacklisted number, and while transforming you reach it, then you have to change either 1, or 3 or the last 4. So you have to find the least number of steps in which start number can be transformed to end number.
algorithm	0	You are writing a simulation for a print server. This print   server can accept jobs from 3 places - network, USB, or operator. It can dispatch only one job at a time. Each input job should contain an integer t which is the time in seconds it will take to process the job. Write a multi-threaded program to simulate the server and provide some simulated load with jobs. Think, of some interesting statistics your program should emit and code them in.
algorithm	0	We've got Quad-trees making up a screen. Every box of the Quad-tree has either color white or black. How would you design the data structure of this Quad-tree?   And how would you count the number of pixels in a screen of a given color, given a Quad-tree?
algorithm	1	Write a function that takes a string as an input and outputs an integer, e.g. turning "1234" into 1234.
algorithm	0	Find minimum number of swaps to convert one binary array to another. Note: It is always possible. You are given two integer array having only 0's and 1's. Find minimum number of swaps to convert array1 to array2. NOTE: You can only swap adjacent elements.
algorithm	6	Given an unsorted array of natural numbers. Where numbers repeat in array. Out put numbers in the order of frequency. Where number of out put is passed as parameter. For Ex: Array -> [0, 0, 100, 3, 5, 4, 6, 4, 2, 100, 2, 100] n -> 2 Out put -> [100, 0] or [100, 2] Since 100 is repeated 3 times and 0, 2 is repeated 2 times, out put up to 2 most frequent elements, program should out put either 100, 0 or 100, 2
algorithm	0	Given an integer of a certain bit length, does it have an even or odd number of parity bits?    Optimization - Can you do this recursively in one line of code?
algorithm	1	Write a method that takes the root of a tree as input and check if the tree is a Binary Search Tree (BST).
algorithm	0	Given the requirements of http://www.careercup.com/question?id=5769432498438144, implement the same task scheduler with parallel task execution.
algorithm	4	Given an m x n matrix where each row element is sorted, but the columns do not appear in sorted order, write a function to print each matrix element in sorted order.  Example matrix: matrix = [  [20, 40, 80],  [5, 60, 90],  [45, 50, 55] ]  Your function should print 5, 20, 40, 45, 50, 55, 60, 80, 90.  Add on: Assume that we are space-constrained such that we can only hold one row in memory at a time. Optimize your function to work under such constraints as efficiently as possible.
algorithm	0	Scenario : Multi Seller E-commerce Website  Given a list of products in a customer basket find the minimum number of seller required to deliver his order,so as to optimise shipping part.  Assuming you have already have below data  Customer orders products : P1,P2,P3,P4,P5,P6 Products and seller mapping P1 = [1,2,3,4] P2=[2,4,5,6]  where 1,2,3 etc denotes seller_ids.  p1
algorithm	0	Your are given two strings str1 and str2, you have to generate another unique string str3, which can only generated by these two string str1 and str2, no other string can generate that string str3. Some later point you have to retrieve back those two string str1 and str2 form that unique string str3.
algorithm	2	{{ There are 3 machines M1, M2 and M3. Each machine is 90% full of its capacity with integers. Now you have to sort all the integers combined and then store the first 1/3rd in M1, second 1/3rd in M2 and last 1/3rd in M3.   Your objective is to minimize the number of sort operations and number of data transfer operations. Each sort operation/data transfer operation is counted as 1 irrespective of the count of values that are being sorted/transferred.  }}
algorithm	0	Given a 2D array of size nXn with values from 1 to n^2 permuted in the 2D array i.e no duplicates. Find the longest snake in the array such that snake can go upward, downward, right, left and each and every adjacent value in the snake should differ by 1. Ex:   2 5 6   3 4 9   1 7 8 Answer is 5. [2,3,4,5,6].
algorithm	0	We have a Very big which our datatypes does not provide. We need to multiply such numbers, how to do? example :  Num1 = {1,2}, Num2 = {1,0} then ans would be {1,2,0} Num1 ={5,3,6,2,8,2,0,2,8}, num2 ={3,5,2,3,2,1,} then ans would be the multiplication value of 5362882028 X 352321
algorithm	2	Given an array of integers find the element for which the sum of left = sum of right. example -1 100 1 98 1 should return index of 1 i.e 2   Answer: First told him about Brute Force approach and then told him if we can iterate once and get the total sum
algorithm	4	you have given array of Size N and two numbers M, K. K is size of subarray and M is count of subarray. You have to return sum of max M subarray of size K (non-overlapping)  N = 7, M = 3 , K = 1   A={2 10 7 18 5 33 0} = 61  subsets are: 33, 18, 10 (top M of size K)   M=2,K=2  {3,2,100,1} = 106 - subsets are: (3,2), (100,1) 2 subsets of size 2
algorithm	0	//Given a method that takes in a positive non-zero number N, return from that method the total number of factors of N.  //Start with O(n) solution and make it faster if we have time
algorithm	0	You have given a mathematical expression in string format. Example: "3+12*3-4/7" You need to write function which will return final result of the given expression. Don't use Expression Tree and start scanning from left to write.  It should be bug free.
algorithm	0	you have 2 lists of points - for one point in the first list, you have to find all the points in the second list that are in a certain radius with a fast algorithm
algorithm	0	Given an array of integers, find the closest pair with a  sum which equals to a given integer. For example, for {1, 7, 5, 3, 9} and 10. The pair is {7, 3}. Also, provide test cases.
algorithm	5	We have words and there positions in a paragraph in sorted order. Write an algorithm to find the least distance for a given 3 words.  eg. for 3 words job: 5, 9 , 17 in: 4, 13, 18 google: 8, 19, 21 ... ... Answer: 17, 18, 19 Can you extend it to "n" words?  Context: In Google search results, the search terms are highlighted in the short paragraph that shows up. We need to  find the shortest sentence that has all the words if we have word positions as mentioned above.
algorithm	0	If i have a graph which have n vertices and  n-k  edges than How many connected component it has ?
algorithm	1	Given an array of integer, find the number of un-ordered pairs in that array, say given {1, 3, 2}, the answer is 1 because {3, 2} is un-ordered, and for array {3, 2, 1}, the answer is 3 because {3, 2}, {3, 1}, {2, 1}.  Obviously, this can be solved by brute force with O(n^2) running time, or permute all possible pairs then eliminate those invalid pairs.  My question is does any body have any better solution and how would you do it because it seems like a dynamic programming problem. A snippet of code would be helpful
algorithm	0	Solve the above problem for N number of input arrays. Find the intersection of N-integer arrays.
algorithm	6	You are given with an array of 1s and 0s. And you are given with an integer m, which signifies number of flips allowed.  find the position of zeros which when flipped will produce maximum continuous series of 1s.  e.g.  input: arr={1 1 0 1 1 0 0 1 1 1 } m=1 output={1 1 1 1 1 0 0 1 1 1} position=2  arr={1 1 0 1 1 0 0 1 1 1 } m=2 output={1 1 0 1 1 1 1 1 1 1} position=5,6
algorithm	0	Given an input string, write a function that returns the Run Length Encoded string for the input string.  For example, if the input string is wwwwaaadexxxxxx, then the function should return w4a3dex6.
trees-and-graphs	0	Find the next value of a given value in a Binary Search Tree. Assume each node has reference to its parent
trees-and-graphs	1	Given two (binary) trees, return the first pair of non-matching leaves  Tree 1: A, B, C, D, E, null, null Tree 2: A, D, B  Output: (E,B)
trees-and-graphs	0	Given a binary search tree of n nodes, find all the pair of  nodes whose sum is equal to a given number k in O(n) time and constant space.
trees-and-graphs	0	Given two stations at random, show all possible routes between those stations (if any) - Stations links are listed below - Links between stations are bi-directional - Routes generated should not have cycles  cambridge<>stansted stansted<> harlow harlow<>london london<>hatfield hatfield<>peterborough cambridge<>hatfield cambridge<>ely peterborough<>ely peterborough<>birmingham birmingham<>manchester manchester<>glasgow glasgow<>edinburgh edinburgh<>newcastle newcastle<>thirsk thirsk<>york york<>manchester york<>peterborough
trees-and-graphs	0	Find cousins of a given node in a Binary tree and  BST.  My Approach:
trees-and-graphs	0	Question 1 / 1 (Path Explosion EASY) You were given a Binary Tree (not necessarily a Binary Search Tree) to play with, say T. T had some special properties  Each internal node in T had exactly 2 children Each internal node in T was represented by an uppercase English alphabet (A-Z) Each leaf node in T was represented by a lowercase English alphabet (a-z) You were told remember T as long as you could. Hence, you memorised the string formed by traversing T in post-order. You used something similar to the pseudocode below  toPostOrderString (node)     if node is leaf         return node.value     else         T = ""         T = T + toPostOrderString(node.left)         T = T + toPostOrderString(node.right)         T = T + node.value         return T Now, time has come to use that string again. The Eye has contacted you. Yes, the secret organisation mentioned in "Now you see me" ( don't tell anyone they are real !! )  You remember the string you memorised back then. You must reconstruct the binary tree T. You are also given a string A. All the characters of A are uppercase English alphabets. Let us assume that T has L leaves. Then, there will be exactly L paths from the root to the leaves - 1 unique path to each leaf.  You have to tell The Eye the number of paths out of L, on which, A exists as a sub-sequence. Look at the explanation for the Sample Case 1 for clarity.  You have to implement the method explodePaths in the code. explodePaths is passed the following parameters, respectively  N, the number of nodes in T S, the string representation of the post-order traversal of T. Of course, the length of S will be equal to N. K, the length of the string A A, the string you must find in the paths from the root of T, to the leaves in T. Note  It is not necessary that T is balanced. But, each internal node always has exactly 2 children. It is possible that both those children are internal nodes also. It is possible that only one of those children is an internal node. For the given string S, because of the constraint that each internal node has exactly 2 children, you will always be able to determine the tree T, uniquely. It is not necessary that all characters in T are unique. There may be several nodes with the same value. In this problem statement, by sub-sequence we mean not necessarily contiguous. This is different from a sub-string. Do not print the answer in explodePaths. Just return the value. The code-template interviewstreet provides does the input and output itself. Consider the following tree     A   / \  t   B     / \    /   \   B     A  / \   / \ x   y a   b This tree is given in Sample Case 1 as  N = 9 S = "txyBabABA" K = 2 A = "AA" Now, there are 5 leaf nodes, and hence, 5 paths from the root to leaves - 1 for each leaf.  - A-t - A-B-B-x - A-B-B-y - A-B-A-a - A-B-A-b Out of these 5 paths, you have to find the number of paths, on which "AA" exists as a sub-sequence. Of course, there are only 2 such paths  - A-B-A-a - A-B-A-b Hence the expected answer is 2.  In the same T above  The answer for A = "BB", is 2 The answer for A = "BA", is 2 The answer for A = "AB", is 4 The answer for K = 1 and A = "A", is 5 The answer for K = 1 and A = "B", is 4 The Sample Case 2 has a little more complicated T. The string S in Sample Case 2 is yeBgeuCBxAB.  Constraints  N  10000 K  100 The expected time complexity of the algorithm is O(N).
trees-and-graphs	0	Change the structure of a Tree node to hold a pointer for the next in-order element (sucessor).  Given a Binary Search Tree.. transform it on a LinkedList by setting the next pointer described above.  Maybe this is a duplicate question.
trees-and-graphs	2	Given a binary tree, print its perimeter:  node, left->most nodes from top to bottom, leaf nodes from left-> right, right->most nodes from bottom to top  ----------------------------1 -----------------------2--------3 ------------------4-----5-----6--------7 -------------8------9-----10------11-----12  should print: 1-2-4-8-9-5-10-11-12-7-3  5 because it doesn't have any children. 10 and 11 are children of 6 and 8 & 9 are children of 4.  Apologies for the messy diagram.
trees-and-graphs	0	Longest posibble path in a tree, you had to return the end leaf nodes.  geeksforgeeks(dot)org/diameter-of-a-binary-tree/
trees-and-graphs	0	Create the n-ary tree from the ancestor matrix. matrix[i][j]=1 if i is the ancestor of j. My answer- find the root (row with all zeroes). Set the column with a[i][root] =0 find all the rows with all zeroes.insert into the tree all the children.and push all into the queue. pop and find the children ,insert into the tree with popped node as parent and push into the queue. Can not implement properly as it needed some modifications. This is asked from my friend at amazon bangalore.
trees-and-graphs	0	Write a non-recursive function to delete an entire binary tree.
trees-and-graphs	0	Lowest common ancestor of bst After that modified it for binary tree
trees-and-graphs	0	You are given a function printKDistanceNodes which takes in a root node of a binary tree, a start node and an integer K. Complete the function to print the value of all the nodes (one-per-line) which are a K distance from the given start node in sorted order. Distance can be upwards or downwards.
trees-and-graphs	0	Round 2: Q2: Given a tree, in addition to the left and right pointer, it has a third pointer, that is set to NULL. Set the third pointer to a node, which will be the successor of the current node, when the tree is traversed in the zig-zag order. In other words, if we traverse the tree using this third pointer alone, then we will be traversing the tree in the zig-zag order. Input: (Plz construct the tree using the pre-order and in-order traversals) Pre-order: 1 2 4 5 3 6 7 In-order: 4 2 5 1 6 3 7 So, after the pointer is fixed, the traversal of the tree using the third pointer should give, 1 3 2 4 5 6 7
trees-and-graphs	0	Maximum Sum path in a binary tree where the each node has a integer value associated to it.We have to print the ROOT TO LEAF path with maximum sum.
trees-and-graphs	0	how do you test given BST is a valid BST?
trees-and-graphs	0	Write a program to find the mirror image of a n-ary tree
trees-and-graphs	0	Write code to get the mirror image of a tree ( the same tree needs to be modified to get its mirror image)
trees-and-graphs	0	Given a tree with N nodes and a N*N matrix. you have to fill in the matrix such that a[i][j]=1 if i is an ancestor of j else a[i][j]=0.
trees-and-graphs	0	Given a binary tree with the following node structure  struct node { //data //pointer to left subtree //pointer to right subtree //pointer to sibling  };   The sibling pointers are NULL for all the nodes.Make the sibling pointers point to their respective nodes in O(n)time complexity
hash-table	0	How do you implement a HashTable? What data structures are used internally to implement this HashTable?
hash-table	1	Given an array which contains the parent  of the ith element in the n-ary tree.Parent[i] = -1 for root. Find the height of the tree. Gave O(n2) ,space O(1). Expected Complexity- Linear You can use extra space if you want. Example- {-1 0 1 6 6 0 0 2 7}   0  1 2 3 4 5 6 7 8 0 is the root here. 0 is the parent of 1 5 6  1 is parnt of 2 6 is parent of 3 4  2 is of 7 which is parent of 8.
hash-table	0	Wht is Hastable and give time complexity to insert, lookup , wat is characteristic of good hash function..
hash-table	0	Design oxford english dictionary.
php	0	Memory management in PHP
php	0	Write a basic web application, following the Model-View-Controller/Modular design pattern. The following URLs should be functional:   http://www.server.com/index.php?page=showTime - Displays the current system time.  http://www.server.com/index.php?page=showDate - Displays the current system date.  http://www.server.com/index.php?page=showVersion - Displays the current PHP / Java version. Each page should be represented by an individual class. Any of the following languages can be used: PHP
